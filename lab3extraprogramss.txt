1]
#include <stdio.h>
#include <string.h>
#include <process.h>
int F(char symbol)
{
    switch (symbol)
    {
    case '+':
    case '-':
        return 1;
    case '*':
    case '/':
        return 3;
    case '^':
    case '$':
        return 6;
    case ')':
        return 0;
    case '#':
        return -1;
    default:
        return 8;
    }
}
int G(char symbol)
{
    switch (symbol)
    {
    case '+':
    case '-':
        return 2;
    case '*':
    case '/':
        return 4;
    case '^':
    case '$':
        return 5;
    case '(':
        return 0;
    case ')':
        return 9;
    default:
        return 7;
    }
}
void infix_prefix(char infix[], char prefix[])
{
    int top, j, i;
    char s[30], symbol;
    top = -1;
    s[++top] = '#';
    j = 0;
    strrev(infix);
    for (i = 0; i < strlen(infix); i++)
    {
        symbol = infix[i];
        while (F(s[top]) > G(symbol))
        {
            prefix[j] = s[top--];
            j++;
        }
        if (F(s[top]) != G(symbol))
        {
            s[++top] = symbol;
        }
        else
        {
            top--;
        }
    }
    while (s[top] != '#')
    {
        prefix[j++] = s[top--];
    }
    prefix[j] = '\0';
    strrev(prefix);
}

void main()
{
    char infix[30], prefix[30];
    printf("Enter the valid infix expression:\n");
    scanf("%s", infix);
    infix_prefix(infix, prefix);
    printf("The prefix expression is:\n");
    printf("%s\n", prefix);
    
}



2]

#include <stdio.h>
#include <math.h>
#include <string.h>
double compute(char symbol,double op1,double op2)
{
	switch(symbol)
	{
		case '+' : return op1+op2;
		case '-' : return op1-op2;
		case '*' : return op1*op2;
		case '/' : return op1/op2;
		/*case '$' :
		case '^' : return pow(op1,op2);*/
	}
	
}

int main()
{
	double s[20];
	double res;
	double op1,op2;
	int top,i;
	char postfix[20],symbol;
	printf("Enter postfix expression : ");
	scanf("%s",postfix);
	top =-1;
	for(int i=0;i<strlen(postfix);i++)
	{
		symbol = postfix[i];
		if(isdigit(symbol))
		s[++top] = symbol - '0';
		else
		{
			op2=s[top--];
			op1=s[top--];
			res = compute(symbol,op1,op2);
			s[++top]=res;
		}
	}
	res = s[top--];
	printf("result = %f\n",res);
	return 0;
}


3]

#include <stdio.h>
int fact(int n)
{
	if(n==0) 
	return 1;
	return n*fact(n-1);
}

int main()
{
	int n;
	
	printf("Enter the value of n\n");
	scanf("%d",&n);
	printf("The factorial of %d = %d \n",n,fact(n));
	return 0;
}

